module.exports = {
	code39: function(src) {
		/* return wrapped html */
		if (!src) {
			return;
		}
		if (!/^[A-Z0-9+\-*\/%$. ]*$/.test(src)) {
			throw new Error("source string out bounds of [A-Z0-9+-*/%$. ]!");
		}
		src = "*" + src + "*";
		var codeMap = {
			"A":"110101001011",
			"N":"101011010011",
			"B":"101101001011",
			"O":"110101101001",
			"C":"110110100101",
			"P":"101101101001",
			"D":"101011001011",
			"Q":"101010110011",
			"E":"110101100101",
			"R":"110101011001",
			"F":"101101100101",
			"S":"101101011001",
			"G":"101010011011",
			"T":"101011011001",
			"H":"110101001101",
			"U":"110010101011",
			"I":"101101001101",
			"V":"100110101011",
			"J":"101011001101",
			"W":"110011010101",
			"K":"110101010011",
			"X":"100101101011",
			"L":"101101010011",
			"Y":"110010110101",
			"M":"110110101001",
			"Z":"100110110101",
			"0":"101001101101",
			"+":"100101001001",
			"1":"110100101011",
			"-":"100101011011",
			"2":"101100101011",
			"*":"100101101101",
			"3":"110110010101",
			"/":"100100101001",
			"4":"101001101011",
			"%":"101001001001",
			"5":"110100110101",
			"$":"100100100101",
			"6":"101100110101",
			".":"110010101101",
			"7":"101001011011",
			" ":"100110101101",
			"8":"110100101101",
			"9":"101100101101"
		};
		var bits = [],
			i = 0,
			len = src.length,
			codeStr = "",
			digits = "";
		for ( ; i < len ; i++ ) {
			i && (codeStr += "0");
			codeStr += codeMap[src[i]];
		}
		var j = 0,
			codeLen = codeStr.length;
		for ( ; j < codeLen ; j++ ) {
			// 1 - black , 0 - white
			digits += (+codeStr[j] ? '<span class="digit digit-1"></span>' : '<span class="digit"></span>');
		}
		return '<div class="code">' + digits + '</div>';
	},
	two: function(src) {
		
	}
};